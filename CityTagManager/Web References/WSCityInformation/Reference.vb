'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace WSCityInformation
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="DTFMWSSoap", [Namespace]:="http://ws.cityinformationcenter.com")>  _
    Partial Public Class DTFMWS
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetAllTagsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PutTagItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteTagItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTagsByTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTagsByContentIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTagTypesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTagTypeByTagTypeIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PutTagTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteTagTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAllContentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetContentByIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetContentByTagListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PutContentItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddContentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateConentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateContentOnlyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RemoveLinkedItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAllContentTagsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateContentTagsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FetchImageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.CityTagManager.My.MySettings.Default.CityTagManager_WSCityInformation_DTFMWS
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetAllTagsCompleted As GetAllTagsCompletedEventHandler
        
        '''<remarks/>
        Public Event PutTagItemCompleted As PutTagItemCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteTagItemCompleted As DeleteTagItemCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTagsByTypeCompleted As GetTagsByTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTagsByContentIDCompleted As GetTagsByContentIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTagTypesCompleted As GetTagTypesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTagTypeByTagTypeIDCompleted As GetTagTypeByTagTypeIDCompletedEventHandler
        
        '''<remarks/>
        Public Event PutTagTypeCompleted As PutTagTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteTagTypeCompleted As DeleteTagTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAllContentCompleted As GetAllContentCompletedEventHandler
        
        '''<remarks/>
        Public Event GetContentByIDCompleted As GetContentByIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetContentByTagListCompleted As GetContentByTagListCompletedEventHandler
        
        '''<remarks/>
        Public Event PutContentItemCompleted As PutContentItemCompletedEventHandler
        
        '''<remarks/>
        Public Event AddContentCompleted As AddContentCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateConentCompleted As UpdateConentCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateContentOnlyCompleted As UpdateContentOnlyCompletedEventHandler
        
        '''<remarks/>
        Public Event RemoveLinkedItemCompleted As RemoveLinkedItemCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAllContentTagsCompleted As GetAllContentTagsCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateContentTagsCompleted As UpdateContentTagsCompletedEventHandler
        
        '''<remarks/>
        Public Event FetchImageCompleted As FetchImageCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cityinformationcenter.com/GetAllTags", RequestNamespace:="http://ws.cityinformationcenter.com", ResponseNamespace:="http://ws.cityinformationcenter.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAllTags(ByVal key As String) As TagItem()
            Dim results() As Object = Me.Invoke("GetAllTags", New Object() {key})
            Return CType(results(0),TagItem())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAllTagsAsync(ByVal key As String)
            Me.GetAllTagsAsync(key, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAllTagsAsync(ByVal key As String, ByVal userState As Object)
            If (Me.GetAllTagsOperationCompleted Is Nothing) Then
                Me.GetAllTagsOperationCompleted = AddressOf Me.OnGetAllTagsOperationCompleted
            End If
            Me.InvokeAsync("GetAllTags", New Object() {key}, Me.GetAllTagsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAllTagsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllTagsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllTagsCompleted(Me, New GetAllTagsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cityinformationcenter.com/PutTagItem", RequestNamespace:="http://ws.cityinformationcenter.com", ResponseNamespace:="http://ws.cityinformationcenter.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PutTagItem(ByVal Tag As TagItem, ByVal key As String) As TagItem
            Dim results() As Object = Me.Invoke("PutTagItem", New Object() {Tag, key})
            Return CType(results(0),TagItem)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PutTagItemAsync(ByVal Tag As TagItem, ByVal key As String)
            Me.PutTagItemAsync(Tag, key, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PutTagItemAsync(ByVal Tag As TagItem, ByVal key As String, ByVal userState As Object)
            If (Me.PutTagItemOperationCompleted Is Nothing) Then
                Me.PutTagItemOperationCompleted = AddressOf Me.OnPutTagItemOperationCompleted
            End If
            Me.InvokeAsync("PutTagItem", New Object() {Tag, key}, Me.PutTagItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnPutTagItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.PutTagItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PutTagItemCompleted(Me, New PutTagItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cityinformationcenter.com/DeleteTagItem", RequestNamespace:="http://ws.cityinformationcenter.com", ResponseNamespace:="http://ws.cityinformationcenter.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteTagItem(ByVal Tag As TagItem, ByVal key As String) As Integer
            Dim results() As Object = Me.Invoke("DeleteTagItem", New Object() {Tag, key})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteTagItemAsync(ByVal Tag As TagItem, ByVal key As String)
            Me.DeleteTagItemAsync(Tag, key, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteTagItemAsync(ByVal Tag As TagItem, ByVal key As String, ByVal userState As Object)
            If (Me.DeleteTagItemOperationCompleted Is Nothing) Then
                Me.DeleteTagItemOperationCompleted = AddressOf Me.OnDeleteTagItemOperationCompleted
            End If
            Me.InvokeAsync("DeleteTagItem", New Object() {Tag, key}, Me.DeleteTagItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteTagItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteTagItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteTagItemCompleted(Me, New DeleteTagItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cityinformationcenter.com/GetTagsByType", RequestNamespace:="http://ws.cityinformationcenter.com", ResponseNamespace:="http://ws.cityinformationcenter.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTagsByType(ByVal reqTagTypeID As Integer, ByVal key As String) As TagItem()
            Dim results() As Object = Me.Invoke("GetTagsByType", New Object() {reqTagTypeID, key})
            Return CType(results(0),TagItem())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTagsByTypeAsync(ByVal reqTagTypeID As Integer, ByVal key As String)
            Me.GetTagsByTypeAsync(reqTagTypeID, key, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTagsByTypeAsync(ByVal reqTagTypeID As Integer, ByVal key As String, ByVal userState As Object)
            If (Me.GetTagsByTypeOperationCompleted Is Nothing) Then
                Me.GetTagsByTypeOperationCompleted = AddressOf Me.OnGetTagsByTypeOperationCompleted
            End If
            Me.InvokeAsync("GetTagsByType", New Object() {reqTagTypeID, key}, Me.GetTagsByTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTagsByTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTagsByTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTagsByTypeCompleted(Me, New GetTagsByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cityinformationcenter.com/GetTagsByContentID", RequestNamespace:="http://ws.cityinformationcenter.com", ResponseNamespace:="http://ws.cityinformationcenter.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTagsByContentID(ByVal contentID As Integer, ByVal key As String) As TagItem()
            Dim results() As Object = Me.Invoke("GetTagsByContentID", New Object() {contentID, key})
            Return CType(results(0),TagItem())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTagsByContentIDAsync(ByVal contentID As Integer, ByVal key As String)
            Me.GetTagsByContentIDAsync(contentID, key, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTagsByContentIDAsync(ByVal contentID As Integer, ByVal key As String, ByVal userState As Object)
            If (Me.GetTagsByContentIDOperationCompleted Is Nothing) Then
                Me.GetTagsByContentIDOperationCompleted = AddressOf Me.OnGetTagsByContentIDOperationCompleted
            End If
            Me.InvokeAsync("GetTagsByContentID", New Object() {contentID, key}, Me.GetTagsByContentIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTagsByContentIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTagsByContentIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTagsByContentIDCompleted(Me, New GetTagsByContentIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cityinformationcenter.com/GetTagTypes", RequestNamespace:="http://ws.cityinformationcenter.com", ResponseNamespace:="http://ws.cityinformationcenter.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTagTypes(ByVal key As String) As TagTypeItem()
            Dim results() As Object = Me.Invoke("GetTagTypes", New Object() {key})
            Return CType(results(0),TagTypeItem())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTagTypesAsync(ByVal key As String)
            Me.GetTagTypesAsync(key, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTagTypesAsync(ByVal key As String, ByVal userState As Object)
            If (Me.GetTagTypesOperationCompleted Is Nothing) Then
                Me.GetTagTypesOperationCompleted = AddressOf Me.OnGetTagTypesOperationCompleted
            End If
            Me.InvokeAsync("GetTagTypes", New Object() {key}, Me.GetTagTypesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTagTypesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTagTypesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTagTypesCompleted(Me, New GetTagTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cityinformationcenter.com/GetTagTypeByTagTypeID", RequestNamespace:="http://ws.cityinformationcenter.com", ResponseNamespace:="http://ws.cityinformationcenter.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTagTypeByTagTypeID(ByVal TagTypeID As Integer, ByVal key As String) As TagTypeItem
            Dim results() As Object = Me.Invoke("GetTagTypeByTagTypeID", New Object() {TagTypeID, key})
            Return CType(results(0),TagTypeItem)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTagTypeByTagTypeIDAsync(ByVal TagTypeID As Integer, ByVal key As String)
            Me.GetTagTypeByTagTypeIDAsync(TagTypeID, key, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTagTypeByTagTypeIDAsync(ByVal TagTypeID As Integer, ByVal key As String, ByVal userState As Object)
            If (Me.GetTagTypeByTagTypeIDOperationCompleted Is Nothing) Then
                Me.GetTagTypeByTagTypeIDOperationCompleted = AddressOf Me.OnGetTagTypeByTagTypeIDOperationCompleted
            End If
            Me.InvokeAsync("GetTagTypeByTagTypeID", New Object() {TagTypeID, key}, Me.GetTagTypeByTagTypeIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTagTypeByTagTypeIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTagTypeByTagTypeIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTagTypeByTagTypeIDCompleted(Me, New GetTagTypeByTagTypeIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cityinformationcenter.com/PutTagType", RequestNamespace:="http://ws.cityinformationcenter.com", ResponseNamespace:="http://ws.cityinformationcenter.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PutTagType(ByVal TagType As TagTypeItem, ByVal key As String) As TagTypeItem
            Dim results() As Object = Me.Invoke("PutTagType", New Object() {TagType, key})
            Return CType(results(0),TagTypeItem)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PutTagTypeAsync(ByVal TagType As TagTypeItem, ByVal key As String)
            Me.PutTagTypeAsync(TagType, key, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PutTagTypeAsync(ByVal TagType As TagTypeItem, ByVal key As String, ByVal userState As Object)
            If (Me.PutTagTypeOperationCompleted Is Nothing) Then
                Me.PutTagTypeOperationCompleted = AddressOf Me.OnPutTagTypeOperationCompleted
            End If
            Me.InvokeAsync("PutTagType", New Object() {TagType, key}, Me.PutTagTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnPutTagTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.PutTagTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PutTagTypeCompleted(Me, New PutTagTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cityinformationcenter.com/DeleteTagType", RequestNamespace:="http://ws.cityinformationcenter.com", ResponseNamespace:="http://ws.cityinformationcenter.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteTagType(ByVal TagType As TagTypeItem, ByVal key As String) As Integer
            Dim results() As Object = Me.Invoke("DeleteTagType", New Object() {TagType, key})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteTagTypeAsync(ByVal TagType As TagTypeItem, ByVal key As String)
            Me.DeleteTagTypeAsync(TagType, key, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteTagTypeAsync(ByVal TagType As TagTypeItem, ByVal key As String, ByVal userState As Object)
            If (Me.DeleteTagTypeOperationCompleted Is Nothing) Then
                Me.DeleteTagTypeOperationCompleted = AddressOf Me.OnDeleteTagTypeOperationCompleted
            End If
            Me.InvokeAsync("DeleteTagType", New Object() {TagType, key}, Me.DeleteTagTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteTagTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteTagTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteTagTypeCompleted(Me, New DeleteTagTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cityinformationcenter.com/GetAllContent", RequestNamespace:="http://ws.cityinformationcenter.com", ResponseNamespace:="http://ws.cityinformationcenter.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAllContent(ByVal key As String) As ContentItem()
            Dim results() As Object = Me.Invoke("GetAllContent", New Object() {key})
            Return CType(results(0),ContentItem())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAllContentAsync(ByVal key As String)
            Me.GetAllContentAsync(key, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAllContentAsync(ByVal key As String, ByVal userState As Object)
            If (Me.GetAllContentOperationCompleted Is Nothing) Then
                Me.GetAllContentOperationCompleted = AddressOf Me.OnGetAllContentOperationCompleted
            End If
            Me.InvokeAsync("GetAllContent", New Object() {key}, Me.GetAllContentOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAllContentOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllContentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllContentCompleted(Me, New GetAllContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cityinformationcenter.com/GetContentByID", RequestNamespace:="http://ws.cityinformationcenter.com", ResponseNamespace:="http://ws.cityinformationcenter.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetContentByID(ByVal id As Integer, ByVal key As String) As ContentItem
            Dim results() As Object = Me.Invoke("GetContentByID", New Object() {id, key})
            Return CType(results(0),ContentItem)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetContentByIDAsync(ByVal id As Integer, ByVal key As String)
            Me.GetContentByIDAsync(id, key, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetContentByIDAsync(ByVal id As Integer, ByVal key As String, ByVal userState As Object)
            If (Me.GetContentByIDOperationCompleted Is Nothing) Then
                Me.GetContentByIDOperationCompleted = AddressOf Me.OnGetContentByIDOperationCompleted
            End If
            Me.InvokeAsync("GetContentByID", New Object() {id, key}, Me.GetContentByIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetContentByIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetContentByIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetContentByIDCompleted(Me, New GetContentByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cityinformationcenter.com/GetContentByTagList", RequestNamespace:="http://ws.cityinformationcenter.com", ResponseNamespace:="http://ws.cityinformationcenter.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetContentByTagList(ByVal tags() As TagItem) As ContentItem()
            Dim results() As Object = Me.Invoke("GetContentByTagList", New Object() {tags})
            Return CType(results(0),ContentItem())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetContentByTagListAsync(ByVal tags() As TagItem)
            Me.GetContentByTagListAsync(tags, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetContentByTagListAsync(ByVal tags() As TagItem, ByVal userState As Object)
            If (Me.GetContentByTagListOperationCompleted Is Nothing) Then
                Me.GetContentByTagListOperationCompleted = AddressOf Me.OnGetContentByTagListOperationCompleted
            End If
            Me.InvokeAsync("GetContentByTagList", New Object() {tags}, Me.GetContentByTagListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetContentByTagListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetContentByTagListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetContentByTagListCompleted(Me, New GetContentByTagListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cityinformationcenter.com/PutContentItem", RequestNamespace:="http://ws.cityinformationcenter.com", ResponseNamespace:="http://ws.cityinformationcenter.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PutContentItem(ByVal item As ContentItem, ByVal key As String) As ContentItem
            Dim results() As Object = Me.Invoke("PutContentItem", New Object() {item, key})
            Return CType(results(0),ContentItem)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PutContentItemAsync(ByVal item As ContentItem, ByVal key As String)
            Me.PutContentItemAsync(item, key, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PutContentItemAsync(ByVal item As ContentItem, ByVal key As String, ByVal userState As Object)
            If (Me.PutContentItemOperationCompleted Is Nothing) Then
                Me.PutContentItemOperationCompleted = AddressOf Me.OnPutContentItemOperationCompleted
            End If
            Me.InvokeAsync("PutContentItem", New Object() {item, key}, Me.PutContentItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnPutContentItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.PutContentItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PutContentItemCompleted(Me, New PutContentItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cityinformationcenter.com/AddContent", RequestNamespace:="http://ws.cityinformationcenter.com", ResponseNamespace:="http://ws.cityinformationcenter.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddContent(ByVal item As ContentItem, ByVal tags() As TagItem, ByVal key As String) As ContentItem
            Dim results() As Object = Me.Invoke("AddContent", New Object() {item, tags, key})
            Return CType(results(0),ContentItem)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddContentAsync(ByVal item As ContentItem, ByVal tags() As TagItem, ByVal key As String)
            Me.AddContentAsync(item, tags, key, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddContentAsync(ByVal item As ContentItem, ByVal tags() As TagItem, ByVal key As String, ByVal userState As Object)
            If (Me.AddContentOperationCompleted Is Nothing) Then
                Me.AddContentOperationCompleted = AddressOf Me.OnAddContentOperationCompleted
            End If
            Me.InvokeAsync("AddContent", New Object() {item, tags, key}, Me.AddContentOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddContentOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddContentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddContentCompleted(Me, New AddContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cityinformationcenter.com/UpdateConent", RequestNamespace:="http://ws.cityinformationcenter.com", ResponseNamespace:="http://ws.cityinformationcenter.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateConent(ByVal item As ContentItem, ByVal tags() As TagItem, ByVal Key As String) As Integer
            Dim results() As Object = Me.Invoke("UpdateConent", New Object() {item, tags, Key})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateConentAsync(ByVal item As ContentItem, ByVal tags() As TagItem, ByVal Key As String)
            Me.UpdateConentAsync(item, tags, Key, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateConentAsync(ByVal item As ContentItem, ByVal tags() As TagItem, ByVal Key As String, ByVal userState As Object)
            If (Me.UpdateConentOperationCompleted Is Nothing) Then
                Me.UpdateConentOperationCompleted = AddressOf Me.OnUpdateConentOperationCompleted
            End If
            Me.InvokeAsync("UpdateConent", New Object() {item, tags, Key}, Me.UpdateConentOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateConentOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateConentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateConentCompleted(Me, New UpdateConentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cityinformationcenter.com/UpdateContentOnly", RequestNamespace:="http://ws.cityinformationcenter.com", ResponseNamespace:="http://ws.cityinformationcenter.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateContentOnly(ByVal item As ContentItem, ByVal key As String) As Integer
            Dim results() As Object = Me.Invoke("UpdateContentOnly", New Object() {item, key})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateContentOnlyAsync(ByVal item As ContentItem, ByVal key As String)
            Me.UpdateContentOnlyAsync(item, key, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateContentOnlyAsync(ByVal item As ContentItem, ByVal key As String, ByVal userState As Object)
            If (Me.UpdateContentOnlyOperationCompleted Is Nothing) Then
                Me.UpdateContentOnlyOperationCompleted = AddressOf Me.OnUpdateContentOnlyOperationCompleted
            End If
            Me.InvokeAsync("UpdateContentOnly", New Object() {item, key}, Me.UpdateContentOnlyOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateContentOnlyOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateContentOnlyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateContentOnlyCompleted(Me, New UpdateContentOnlyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cityinformationcenter.com/RemoveLinkedItem", RequestNamespace:="http://ws.cityinformationcenter.com", ResponseNamespace:="http://ws.cityinformationcenter.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RemoveLinkedItem(ByVal Linkeditemid As Integer, ByVal key As String) As Boolean
            Dim results() As Object = Me.Invoke("RemoveLinkedItem", New Object() {Linkeditemid, key})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RemoveLinkedItemAsync(ByVal Linkeditemid As Integer, ByVal key As String)
            Me.RemoveLinkedItemAsync(Linkeditemid, key, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoveLinkedItemAsync(ByVal Linkeditemid As Integer, ByVal key As String, ByVal userState As Object)
            If (Me.RemoveLinkedItemOperationCompleted Is Nothing) Then
                Me.RemoveLinkedItemOperationCompleted = AddressOf Me.OnRemoveLinkedItemOperationCompleted
            End If
            Me.InvokeAsync("RemoveLinkedItem", New Object() {Linkeditemid, key}, Me.RemoveLinkedItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnRemoveLinkedItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.RemoveLinkedItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RemoveLinkedItemCompleted(Me, New RemoveLinkedItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cityinformationcenter.com/GetAllContentTags", RequestNamespace:="http://ws.cityinformationcenter.com", ResponseNamespace:="http://ws.cityinformationcenter.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAllContentTags(ByVal key As String) As ContentTagItem()
            Dim results() As Object = Me.Invoke("GetAllContentTags", New Object() {key})
            Return CType(results(0),ContentTagItem())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAllContentTagsAsync(ByVal key As String)
            Me.GetAllContentTagsAsync(key, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAllContentTagsAsync(ByVal key As String, ByVal userState As Object)
            If (Me.GetAllContentTagsOperationCompleted Is Nothing) Then
                Me.GetAllContentTagsOperationCompleted = AddressOf Me.OnGetAllContentTagsOperationCompleted
            End If
            Me.InvokeAsync("GetAllContentTags", New Object() {key}, Me.GetAllContentTagsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAllContentTagsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllContentTagsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllContentTagsCompleted(Me, New GetAllContentTagsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cityinformationcenter.com/UpdateContentTags", RequestNamespace:="http://ws.cityinformationcenter.com", ResponseNamespace:="http://ws.cityinformationcenter.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateContentTags(ByVal LinkedContentID As Integer, ByVal tags() As TagItem, ByVal key As String) As Integer
            Dim results() As Object = Me.Invoke("UpdateContentTags", New Object() {LinkedContentID, tags, key})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateContentTagsAsync(ByVal LinkedContentID As Integer, ByVal tags() As TagItem, ByVal key As String)
            Me.UpdateContentTagsAsync(LinkedContentID, tags, key, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateContentTagsAsync(ByVal LinkedContentID As Integer, ByVal tags() As TagItem, ByVal key As String, ByVal userState As Object)
            If (Me.UpdateContentTagsOperationCompleted Is Nothing) Then
                Me.UpdateContentTagsOperationCompleted = AddressOf Me.OnUpdateContentTagsOperationCompleted
            End If
            Me.InvokeAsync("UpdateContentTags", New Object() {LinkedContentID, tags, key}, Me.UpdateContentTagsOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateContentTagsOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateContentTagsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateContentTagsCompleted(Me, New UpdateContentTagsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cityinformationcenter.com/FetchImage", RequestNamespace:="http://ws.cityinformationcenter.com", ResponseNamespace:="http://ws.cityinformationcenter.com", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FetchImage(ByVal imageURL As String, ByVal key As String) As String
            Dim results() As Object = Me.Invoke("FetchImage", New Object() {imageURL, key})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FetchImageAsync(ByVal imageURL As String, ByVal key As String)
            Me.FetchImageAsync(imageURL, key, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FetchImageAsync(ByVal imageURL As String, ByVal key As String, ByVal userState As Object)
            If (Me.FetchImageOperationCompleted Is Nothing) Then
                Me.FetchImageOperationCompleted = AddressOf Me.OnFetchImageOperationCompleted
            End If
            Me.InvokeAsync("FetchImage", New Object() {imageURL, key}, Me.FetchImageOperationCompleted, userState)
        End Sub
        
        Private Sub OnFetchImageOperationCompleted(ByVal arg As Object)
            If (Not (Me.FetchImageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FetchImageCompleted(Me, New FetchImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ws.cityinformationcenter.com")>  _
    Partial Public Class TagItem
        
        Private idField As Integer
        
        Private nameField As String
        
        Private tagTypeIDField As Integer
        
        Private tagTypeNameField As String
        
        '''<remarks/>
        Public Property Id() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TagTypeID() As Integer
            Get
                Return Me.tagTypeIDField
            End Get
            Set
                Me.tagTypeIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TagTypeName() As String
            Get
                Return Me.tagTypeNameField
            End Get
            Set
                Me.tagTypeNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ws.cityinformationcenter.com")>  _
    Partial Public Class ContentTagItem
        
        Private idField As Integer
        
        Private contentIDField As Integer
        
        Private contentTitleField As String
        
        Private tagIDField As Integer
        
        Private tagNameField As String
        
        '''<remarks/>
        Public Property Id() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ContentID() As Integer
            Get
                Return Me.contentIDField
            End Get
            Set
                Me.contentIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ContentTitle() As String
            Get
                Return Me.contentTitleField
            End Get
            Set
                Me.contentTitleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TagID() As Integer
            Get
                Return Me.tagIDField
            End Get
            Set
                Me.tagIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TagName() As String
            Get
                Return Me.tagNameField
            End Get
            Set
                Me.tagNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ws.cityinformationcenter.com")>  _
    Partial Public Class ContentItem
        
        Private idField As Integer
        
        Private titleField As String
        
        Private descriptionField As String
        
        Private pubDateField As System.Nullable(Of Date)
        
        Private endPubDateField As System.Nullable(Of Date)
        
        Private iconURLField As String
        
        Private imageURLField As String
        
        Private linkURLField As String
        
        Private lastEditDateField As System.Nullable(Of Date)
        
        Private linkAnchorTextField As String
        
        Private activeField As Boolean
        
        Private readMoreTextField As String
        
        Private keywordsField As String
        
        Private tagListField() As TagItem
        
        '''<remarks/>
        Public Property Id() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Title() As String
            Get
                Return Me.titleField
            End Get
            Set
                Me.titleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property PubDate() As System.Nullable(Of Date)
            Get
                Return Me.pubDateField
            End Get
            Set
                Me.pubDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property EndPubDate() As System.Nullable(Of Date)
            Get
                Return Me.endPubDateField
            End Get
            Set
                Me.endPubDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IconURL() As String
            Get
                Return Me.iconURLField
            End Get
            Set
                Me.iconURLField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ImageURL() As String
            Get
                Return Me.imageURLField
            End Get
            Set
                Me.imageURLField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LinkURL() As String
            Get
                Return Me.linkURLField
            End Get
            Set
                Me.linkURLField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property LastEditDate() As System.Nullable(Of Date)
            Get
                Return Me.lastEditDateField
            End Get
            Set
                Me.lastEditDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LinkAnchorText() As String
            Get
                Return Me.linkAnchorTextField
            End Get
            Set
                Me.linkAnchorTextField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Active() As Boolean
            Get
                Return Me.activeField
            End Get
            Set
                Me.activeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReadMoreText() As String
            Get
                Return Me.readMoreTextField
            End Get
            Set
                Me.readMoreTextField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Keywords() As String
            Get
                Return Me.keywordsField
            End Get
            Set
                Me.keywordsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TagList() As TagItem()
            Get
                Return Me.tagListField
            End Get
            Set
                Me.tagListField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ws.cityinformationcenter.com")>  _
    Partial Public Class TagTypeItem
        
        Private idField As Integer
        
        Private nameField As String
        
        Private descriptionField As String
        
        '''<remarks/>
        Public Property Id() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetAllTagsCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllTagsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAllTagsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TagItem()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TagItem())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub PutTagItemCompletedEventHandler(ByVal sender As Object, ByVal e As PutTagItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PutTagItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TagItem
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TagItem)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DeleteTagItemCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteTagItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteTagItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetTagsByTypeCompletedEventHandler(ByVal sender As Object, ByVal e As GetTagsByTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTagsByTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TagItem()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TagItem())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetTagsByContentIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetTagsByContentIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTagsByContentIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TagItem()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TagItem())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetTagTypesCompletedEventHandler(ByVal sender As Object, ByVal e As GetTagTypesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTagTypesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TagTypeItem()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TagTypeItem())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetTagTypeByTagTypeIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetTagTypeByTagTypeIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTagTypeByTagTypeIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TagTypeItem
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TagTypeItem)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub PutTagTypeCompletedEventHandler(ByVal sender As Object, ByVal e As PutTagTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PutTagTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TagTypeItem
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TagTypeItem)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DeleteTagTypeCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteTagTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteTagTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetAllContentCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllContentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAllContentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ContentItem()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ContentItem())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetContentByIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetContentByIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetContentByIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ContentItem
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ContentItem)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetContentByTagListCompletedEventHandler(ByVal sender As Object, ByVal e As GetContentByTagListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetContentByTagListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ContentItem()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ContentItem())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub PutContentItemCompletedEventHandler(ByVal sender As Object, ByVal e As PutContentItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PutContentItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ContentItem
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ContentItem)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub AddContentCompletedEventHandler(ByVal sender As Object, ByVal e As AddContentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddContentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ContentItem
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ContentItem)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdateConentCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateConentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateConentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdateContentOnlyCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateContentOnlyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateContentOnlyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub RemoveLinkedItemCompletedEventHandler(ByVal sender As Object, ByVal e As RemoveLinkedItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RemoveLinkedItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetAllContentTagsCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllContentTagsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAllContentTagsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ContentTagItem()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ContentTagItem())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdateContentTagsCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateContentTagsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateContentTagsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub FetchImageCompletedEventHandler(ByVal sender As Object, ByVal e As FetchImageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FetchImageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
